name: "Security Scanning"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '35 17 * * 0'

jobs:
  # 1. Code Scanning con CodeQL - Solo Java/Kotlin
  codeql-analysis:
    name: CodeQL Analysis - Java/Kotlin
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug - Verify Java/Kotlin files
        run: |
          echo "📁 Java files found: $(find . -name '*.java' | wc -l)"
          echo "📁 Kotlin files found: $(find . -name '*.kt' | wc -l)"
          echo "📁 Build files:"
          find . -name "pom.xml" -o -name "build.gradle" -o -name "build.gradle.kts" | head -5

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java, kotlin # ⬅️ SOLO Java y Kotlin
          queries: security-extended

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          output: sarif-results

  # 2. IaC Scanning
  iac-scanning:
    name: Infrastructure as Code Scanning
    runs-on: ubuntu-latest
    needs: codeql-analysis
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run TfSec for Terraform
        uses: aquasecurity/tfsec-action@v0.1.0
        with:
          sarif_upload: true
        continue-on-error: true

      - name: Run Checkov for multi-cloud IaC
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: .
          output_format: sarif
          output_file: checkov-results.sarif
          soft_fail: true
        continue-on-error: true

      - name: Run Trivy for Kubernetes and Docker
        uses: aquasecurity/trivy-action@0.13.0
        with:
          scan-type: 'config'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
        continue-on-error: true

      - name: Upload IaC Scan Results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: |
            tfsec-results.sarif
            checkov-results.sarif
            trivy-results.sarif

  # 3. Dependency Scanning
  dependency-scanning:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest
    needs: codeql-analysis
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'my-project'
          path: '.'
          format: 'SARIF'
          out: 'dependency-check-results.sarif'
        continue-on-error: true

      - name: Upload Dependency Scan Results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: dependency-check-results.sarif

  # 4. Secret Scanning (automático pero con verificación)
  secret-scanning-check:
    name: Secret Scanning Verification
    runs-on: ubuntu-latest
    needs: [codeql-analysis, iac-scanning, dependency-scanning]
    if: always()

    steps:
      - name: Verify no new secrets detected
        run: |
          echo "✅ Secret Scanning está activo automáticamente en todo el repositorio"
          echo "Revisa la pestaña Security > Secret scanning alerts en tu repo"

  # 5. Resumen y reporte de resultados
  security-report:
    name: 📊 Security Scan Summary
    runs-on: ubuntu-latest
    needs: [codeql-analysis, iac-scanning, dependency-scanning, secret-scanning-check]
    if: always()

    steps:
      - name: Generate Security Summary
        run: |
          echo "🚀 Análisis de seguridad completado"
          echo "--------------------------------"
          echo "✅ Code Scanning (Java/Kotlin) - Completado"
          echo "✅ IaC Scanning - Completado" 
          echo "✅ Dependency Scanning - Completado"
          echo "✅ Secret Scanning - Activado"
          echo ""
          echo "📋 Revisa los resultados en:"
          echo "   - Pestaña 'Security' del repositorio"
          echo "   - GitHub Advanced Security alerts"
          echo "   - Actions logs para detalles completos"